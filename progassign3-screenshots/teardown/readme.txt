Since we know our simulated lossy channel is not dropping or messing with messages involved with connection establishment or teardown, it's easy to see that the connection teardown is functioning as expected in the screenshot. First, the client on the left sends a FIN message to the channel (middle), which simply delays that FIN message (does not drop) and sends it to the server (right), which then transitions to FIN_RECEIVED and sends back a FINACK message through the channel, which adds delay. Then, the client receives that message, and acknowledges it with an ACK to complete the three way teardown.

Note this happened successfully even with a channel configured to drop 50% of the client and server messages, because the teardown and establishment messages are excluded from the drops.